#!/bin/bash

are_you_sure () {
  MSG=${1:-"Are you sure to continue?"}
  read -r -p "$MSG [y/N] " response
  [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]
}

if [ "$1" == "images" ]; then
    echo "WARNING: This will remove all dangling images!"
    echo "The operation cannot be undone as data will be erased from the disk directly!"

    are_you_sure && docker image ls --filter "dangling=true" --quiet | xargs docker image rm
elif [ "$1" == "volumes" ]; then
    echo "WARNING: This will remove all dangling volumes!"
    echo "The operation cannot be undone as data will be erased from the disk directly!"

    are_you_sure && docker volume ls --filter "dangling=true" --quiet | xargs docker volume rm
elif [ "$1" == "networks" ]; then
    echo "WARNING: This will remove all unused networks!"
    echo "The operation cannot be undone as data will be erased from the disk directly!"

    are_you_sure && docker network prune --force
elif [ "$1" == "containers" ]; then


else


fi

echo "WARNING: This will remove all local dangling images, volumes and networks!"
echo "The operation cannot be undone as data will be erased from the disk directly!"

read -r -p "Are you sure to continue? [y/N] " response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    echo ""

    echo "Removing images..."
    docker image ls --filter "dangling=true" --quiet | xargs docker image rm
    echo ""

    echo "Removing volumes..."
    docker volume ls --filter "dangling=true" --quiet | xargs docker volume rm
    echo ""

    echo "Removing networks..."
    docker network ls --filter "dangling=true" --quiet | xargs docker network rm
    echo ""

    echo ""
    echo "Done. To also remove all stopped containers please run the 'docker container prune' or 'docker system prune' manually."
    exit 0
else
    echo ""
    echo "Phew, that was close..."
    exit 0
fi
